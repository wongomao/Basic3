@page
@model OdeToFood.Pages.Restaurants.ClientRestaurantsModel
@{
    ViewData["Title"] = "ClientRestaurants";
}

<h2>ClientRestaurants</h2>

@section Scripts { 

<environment include="Development">
    <!-- package.json is now in OdeToFood folder; we must do an install       -->
    <!-- see https://datatables.net/download/ look for NPM download / install -->
    <!-- ...Basic3\CoreLearn\OdeToFood> npm install --save datatables.net-bs  -->
    <!-- creates "L:\dev\Basic3\CoreLearn\OdeToFood\node_modules"             -->
    <!-- -------------------------------------------------------------------- -->

</environment>
    <environment exclude="Development">
        <!-- use CDN (content delivery network) to deliver datatables js when not in dev mode -->
        <!-- see https://datatables.net/download/ -->
        <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs/dt-1.10.18/datatables.min.css" />
        <script type="text/javascript" src="https://cdn.datatables.net/v/bs/dt-1.10.18/datatables.min.js"></script>
    </environment>

    <script>
        // normally we do not script here, but this is for simplicity
        // assume we have jquery loaded on the page
        // here the function will be invoked when the DOM is ready
        //    Want jquery to go out and make an ajax call to an api endpoint that we have built
        //    endpoint "/api/restaurants/" should return all the restaurants in a json format

        $(function () {
            $.ajax("/api/restaurants/", { method: "get" })
                .then(function (response) {
                    // ? what to do with response?
                    // want to build table, but for now, just log to console
                    console.dir(response);
                });
        });

    </script>
}